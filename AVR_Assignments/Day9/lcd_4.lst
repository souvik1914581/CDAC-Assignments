   1               		.file	"lcd_4.c"
   2               	__SREG__ = 0x3f
   3               	__SP_H__ = 0x3e
   4               	__SP_L__ = 0x3d
   5               	__CCP__  = 0x34
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
   8               		.global __do_copy_data
   9               		.global __do_clear_bss
  11               		.text
  12               	.Ltext0:
  71               	.global	__vector_1
  73               	__vector_1:
   1:lcd_4.c       **** // ***********************************************************
   2:lcd_4.c       **** 
   3:lcd_4.c       **** // Project:
   4:lcd_4.c       **** 
   5:lcd_4.c       **** // Author:
   6:lcd_4.c       **** 
   7:lcd_4.c       **** // Module description:
   8:lcd_4.c       **** 
   9:lcd_4.c       **** // ***********************************************************
  10:lcd_4.c       **** 
  11:lcd_4.c       **** 
  12:lcd_4.c       **** 
  13:lcd_4.c       **** #include <avr/io.h>              // Most basic include files
  14:lcd_4.c       **** 
  15:lcd_4.c       **** #include <avr/interrupt.h>       // Add the necessary ones
  16:lcd_4.c       **** 
  17:lcd_4.c       **** //#include <avr/signal.h>
  18:lcd_4.c       **** 
  19:lcd_4.c       **** 
  20:lcd_4.c       **** 
  21:lcd_4.c       **** 
  22:lcd_4.c       **** 
  23:lcd_4.c       **** #define F_CPU 1000000
  24:lcd_4.c       **** 
  25:lcd_4.c       ****   #include<util/delay.h>
  26:lcd_4.c       **** 
  27:lcd_4.c       **** 
  28:lcd_4.c       **** 
  29:lcd_4.c       ****          // here
  30:lcd_4.c       **** 
  31:lcd_4.c       **** 
  32:lcd_4.c       **** 
  33:lcd_4.c       **** // Define here the global static variables
  34:lcd_4.c       **** 
  35:lcd_4.c       **** //
  36:lcd_4.c       **** 
  37:lcd_4.c       **** int My_global;
  38:lcd_4.c       **** 
  39:lcd_4.c       **** 
  40:lcd_4.c       **** 
  41:lcd_4.c       **** // Interrupt handler example for INT0
  42:lcd_4.c       **** 
  43:lcd_4.c       **** //
  44:lcd_4.c       **** 
  45:lcd_4.c       **** SIGNAL(SIG_INTERRUPT0) {
  74               	 r0,__SREG__
  75               		push r0
  76               		clr __zero_reg__
  77 0000 1F92      		push r29
  78 0002 0F92      		push r28
  79 0004 0FB6      		in r28,__SP_L__
  80 0006 0F92      		in r29,__SP_H__
  81 0008 1124      	/* prologue: Signal */
  82 000a DF93      	/* frame size = 0 */
  83 000c CF93      	/* epilogue start */
  85 0010 DEB7      	.LM1:
  86               		pop r28
  87               		pop r29
  88               		pop r0
  46:lcd_4.c       **** 
  47:lcd_4.c       **** 
  48:lcd_4.c       **** 
  49:lcd_4.c       **** }
  89               	0
  90               		pop r0
  91 0012 CF91      		pop __zero_reg__
  92 0014 DF91      		reti
  94 0018 0FBE      	.Lscope1:
  97 001e 1895      	.global	lcdcommand
  99               	lcdcommand:
 101               	.LM2:
 102               	.LFBB2:
 103               		push r29
 104               		push r28
  50:lcd_4.c       **** 
  51:lcd_4.c       **** 
  52:lcd_4.c       **** 
  53:lcd_4.c       **** // It is recommended to use this coding style to
  54:lcd_4.c       **** 
  55:lcd_4.c       **** // follow better the mixed C-assembly code in the
  56:lcd_4.c       **** 
  57:lcd_4.c       **** // Program Memory window
  58:lcd_4.c       **** 
  59:lcd_4.c       **** //
  60:lcd_4.c       **** 
  61:lcd_4.c       **** void lcdcommand(unsigned char cmnd)
  62:lcd_4.c       **** 
  63:lcd_4.c       **** {
 105               	
 106               		in r29,__SP_H__
 107               		sbiw r28,31
 108 0020 DF93      		in __tmp_reg__,__SREG__
 109 0022 CF93      		cli
 110 0024 CDB7      		out __SP_H__,r29
 111 0026 DEB7      		out __SREG__,__tmp_reg__
 112 0028 6F97      		out __SP_L__,r28
 113 002a 0FB6      	/* prologue: function */
 114 002c F894      	/* frame size = 31 */
 115 002e DEBF      		std Y+31,r24
 117 0032 CDBF      	.LM3:
 118               		ldd r24,Y+31
 119               		andi r24,lo8(-16)
 120 0034 8F8F      		std Y+30,r24
  64:lcd_4.c       **** 
  65:lcd_4.c       **** 		unsigned char a,b;
  66:lcd_4.c       **** 
  67:lcd_4.c       **** 		a=cmnd & 0xf0;
 121               	,.LM4-.LFBB2
 122               	.LM4:
 123 0036 8F8D      		ldi r30,lo8(56)
 124 0038 807F      		ldi r31,hi8(56)
 125 003a 8E8F      		ldd r24,Y+30
  68:lcd_4.c       **** 
  69:lcd_4.c       **** 		PORTB=a|0x04;
 126               	r24,lo8(4)
 127               		st Z,r24
 128 003c E8E3      		ldi r24,lo8(0x41200000)
 129 003e F0E0      		ldi r25,hi8(0x41200000)
 130 0040 8E8D      		ldi r26,hlo8(0x41200000)
 131 0042 8460      		ldi r27,hhi8(0x41200000)
 132 0044 8083      		std Y+25,r24
 133 0046 80E0      		std Y+26,r25
 134 0048 90E0      		std Y+27,r26
 135 004a A0E2      		std Y+28,r27
 136 004c B1E4      	.LBB14:
 137 004e 898F      	.LBB15:
 139 0052 AB8F      	.Ltext1:
 141               	.LM5:
 142               		ldi r18,lo8(0x437a0000)
 143               		ldi r19,hi8(0x437a0000)
 144               		ldi r20,hlo8(0x437a0000)
   1:c:/winavr/lib/gcc/../../avr/include/util/delay.h **** /* Copyright (c) 2002, Marek Michalkiewicz
   2:c:/winavr/lib/gcc/../../avr/include/util/delay.h ****    Copyright (c) 2004,2005,2007 Joerg Wunsch
   3:c:/winavr/lib/gcc/../../avr/include/util/delay.h ****    Copyright (c) 2007  Florin-Viorel Petrov
   4:c:/winavr/lib/gcc/../../avr/include/util/delay.h ****    All rights reserved.
   5:c:/winavr/lib/gcc/../../avr/include/util/delay.h **** 
   6:c:/winavr/lib/gcc/../../avr/include/util/delay.h ****    Redistribution and use in source and binary forms, with or without
   7:c:/winavr/lib/gcc/../../avr/include/util/delay.h ****    modification, are permitted provided that the following conditions are met:
   8:c:/winavr/lib/gcc/../../avr/include/util/delay.h **** 
   9:c:/winavr/lib/gcc/../../avr/include/util/delay.h ****    * Redistributions of source code must retain the above copyright
  10:c:/winavr/lib/gcc/../../avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer.
  11:c:/winavr/lib/gcc/../../avr/include/util/delay.h **** 
  12:c:/winavr/lib/gcc/../../avr/include/util/delay.h ****    * Redistributions in binary form must reproduce the above copyright
  13:c:/winavr/lib/gcc/../../avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer in
  14:c:/winavr/lib/gcc/../../avr/include/util/delay.h ****      the documentation and/or other materials provided with the
  15:c:/winavr/lib/gcc/../../avr/include/util/delay.h ****      distribution.
  16:c:/winavr/lib/gcc/../../avr/include/util/delay.h **** 
  17:c:/winavr/lib/gcc/../../avr/include/util/delay.h ****    * Neither the name of the copyright holders nor the names of
  18:c:/winavr/lib/gcc/../../avr/include/util/delay.h ****      contributors may be used to endorse or promote products derived
  19:c:/winavr/lib/gcc/../../avr/include/util/delay.h ****      from this software without specific prior written permission.
  20:c:/winavr/lib/gcc/../../avr/include/util/delay.h **** 
  21:c:/winavr/lib/gcc/../../avr/include/util/delay.h ****   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:c:/winavr/lib/gcc/../../avr/include/util/delay.h ****   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:c:/winavr/lib/gcc/../../avr/include/util/delay.h ****   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:c:/winavr/lib/gcc/../../avr/include/util/delay.h ****   ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
  25:c:/winavr/lib/gcc/../../avr/include/util/delay.h ****   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:c:/winavr/lib/gcc/../../avr/include/util/delay.h ****   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:c:/winavr/lib/gcc/../../avr/include/util/delay.h ****   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:c:/winavr/lib/gcc/../../avr/include/util/delay.h ****   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:c:/winavr/lib/gcc/../../avr/include/util/delay.h ****   CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:c:/winavr/lib/gcc/../../avr/include/util/delay.h ****   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:c:/winavr/lib/gcc/../../avr/include/util/delay.h ****   POSSIBILITY OF SUCH DAMAGE. */
  32:c:/winavr/lib/gcc/../../avr/include/util/delay.h **** 
  33:c:/winavr/lib/gcc/../../avr/include/util/delay.h **** /* $Id: delay.h,v 1.5 2007/10/28 23:25:56 joerg_wunsch Exp $ */
  34:c:/winavr/lib/gcc/../../avr/include/util/delay.h **** 
  35:c:/winavr/lib/gcc/../../avr/include/util/delay.h **** #ifndef _UTIL_DELAY_H_
  36:c:/winavr/lib/gcc/../../avr/include/util/delay.h **** #define _UTIL_DELAY_H_ 1
  37:c:/winavr/lib/gcc/../../avr/include/util/delay.h **** 
  38:c:/winavr/lib/gcc/../../avr/include/util/delay.h **** #include <inttypes.h>
  39:c:/winavr/lib/gcc/../../avr/include/util/delay.h **** #include <util/delay_basic.h>
  40:c:/winavr/lib/gcc/../../avr/include/util/delay.h **** 
  41:c:/winavr/lib/gcc/../../avr/include/util/delay.h **** /** \file */
  42:c:/winavr/lib/gcc/../../avr/include/util/delay.h **** /** \defgroup util_delay <util/delay.h>: Convenience functions for busy-wait delay loops
  43:c:/winavr/lib/gcc/../../avr/include/util/delay.h ****     \code
  44:c:/winavr/lib/gcc/../../avr/include/util/delay.h ****     #define F_CPU 1000000UL  // 1 MHz
  45:c:/winavr/lib/gcc/../../avr/include/util/delay.h ****     //#define F_CPU 14.7456E6
  46:c:/winavr/lib/gcc/../../avr/include/util/delay.h ****     #include <util/delay.h>
  47:c:/winavr/lib/gcc/../../avr/include/util/delay.h ****     \endcode
  48:c:/winavr/lib/gcc/../../avr/include/util/delay.h **** 
  49:c:/winavr/lib/gcc/../../avr/include/util/delay.h ****     \note As an alternative method, it is possible to pass the
  50:c:/winavr/lib/gcc/../../avr/include/util/delay.h ****     F_CPU macro down to the compiler from the Makefile.
  51:c:/winavr/lib/gcc/../../avr/include/util/delay.h ****     Obviously, in that case, no \c \#define statement should be
  52:c:/winavr/lib/gcc/../../avr/include/util/delay.h ****     used.
  53:c:/winavr/lib/gcc/../../avr/include/util/delay.h **** 
  54:c:/winavr/lib/gcc/../../avr/include/util/delay.h ****     The functions in this header file are wrappers around the basic
  55:c:/winavr/lib/gcc/../../avr/include/util/delay.h ****     busy-wait functions from <util/delay_basic.h>.  They are meant as
  56:c:/winavr/lib/gcc/../../avr/include/util/delay.h ****     convenience functions where actual time values can be specified
  57:c:/winavr/lib/gcc/../../avr/include/util/delay.h ****     rather than a number of cycles to wait for.  The idea behind is
  58:c:/winavr/lib/gcc/../../avr/include/util/delay.h ****     that compile-time constant expressions will be eliminated by
  59:c:/winavr/lib/gcc/../../avr/include/util/delay.h ****     compiler optimization so floating-point expressions can be used
  60:c:/winavr/lib/gcc/../../avr/include/util/delay.h ****     to calculate the number of delay cycles needed based on the CPU
  61:c:/winavr/lib/gcc/../../avr/include/util/delay.h ****     frequency passed by the macro F_CPU.
  62:c:/winavr/lib/gcc/../../avr/include/util/delay.h **** 
  63:c:/winavr/lib/gcc/../../avr/include/util/delay.h ****     \note In order for these functions to work as intended, compiler
  64:c:/winavr/lib/gcc/../../avr/include/util/delay.h ****     optimizations <em>must</em> be enabled, and the delay time
  65:c:/winavr/lib/gcc/../../avr/include/util/delay.h ****     <em>must</em> be an expression that is a known constant at
  66:c:/winavr/lib/gcc/../../avr/include/util/delay.h ****     compile-time.  If these requirements are not met, the resulting
  67:c:/winavr/lib/gcc/../../avr/include/util/delay.h ****     delay will be much longer (and basically unpredictable), and
  68:c:/winavr/lib/gcc/../../avr/include/util/delay.h ****     applications that otherwise do not use floating-point calculations
  69:c:/winavr/lib/gcc/../../avr/include/util/delay.h ****     will experience severe code bloat by the floating-point library
  70:c:/winavr/lib/gcc/../../avr/include/util/delay.h ****     routines linked into the application.
  71:c:/winavr/lib/gcc/../../avr/include/util/delay.h **** 
  72:c:/winavr/lib/gcc/../../avr/include/util/delay.h ****     The functions available allow the specification of microsecond, and
  73:c:/winavr/lib/gcc/../../avr/include/util/delay.h ****     millisecond delays directly, using the application-supplied macro
  74:c:/winavr/lib/gcc/../../avr/include/util/delay.h ****     F_CPU as the CPU clock frequency (in Hertz).
  75:c:/winavr/lib/gcc/../../avr/include/util/delay.h **** 
  76:c:/winavr/lib/gcc/../../avr/include/util/delay.h **** */
  77:c:/winavr/lib/gcc/../../avr/include/util/delay.h **** 
  78:c:/winavr/lib/gcc/../../avr/include/util/delay.h **** #if !defined(__DOXYGEN__)
  79:c:/winavr/lib/gcc/../../avr/include/util/delay.h **** static inline void _delay_us(double __us) __attribute__((always_inline));
  80:c:/winavr/lib/gcc/../../avr/include/util/delay.h **** static inline void _delay_ms(double __ms) __attribute__((always_inline));
  81:c:/winavr/lib/gcc/../../avr/include/util/delay.h **** #endif
  82:c:/winavr/lib/gcc/../../avr/include/util/delay.h **** 
  83:c:/winavr/lib/gcc/../../avr/include/util/delay.h **** #ifndef F_CPU
  84:c:/winavr/lib/gcc/../../avr/include/util/delay.h **** /* prevent compiler error by supplying a default */
  85:c:/winavr/lib/gcc/../../avr/include/util/delay.h **** # warning "F_CPU not defined for <util/delay.h>"
  86:c:/winavr/lib/gcc/../../avr/include/util/delay.h **** # define F_CPU 1000000UL
  87:c:/winavr/lib/gcc/../../avr/include/util/delay.h **** #endif
  88:c:/winavr/lib/gcc/../../avr/include/util/delay.h **** 
  89:c:/winavr/lib/gcc/../../avr/include/util/delay.h **** #ifndef __OPTIMIZE__
  90:c:/winavr/lib/gcc/../../avr/include/util/delay.h **** # warning "Compiler optimizations disabled; functions from <util/delay.h> won't work as designed"
  91:c:/winavr/lib/gcc/../../avr/include/util/delay.h **** #endif
  92:c:/winavr/lib/gcc/../../avr/include/util/delay.h **** 
  93:c:/winavr/lib/gcc/../../avr/include/util/delay.h **** /**
  94:c:/winavr/lib/gcc/../../avr/include/util/delay.h ****    \ingroup util_delay
  95:c:/winavr/lib/gcc/../../avr/include/util/delay.h **** 
  96:c:/winavr/lib/gcc/../../avr/include/util/delay.h ****    Perform a delay of \c __us microseconds, using _delay_loop_1().
  97:c:/winavr/lib/gcc/../../avr/include/util/delay.h **** 
  98:c:/winavr/lib/gcc/../../avr/include/util/delay.h ****    The macro F_CPU is supposed to be defined to a
  99:c:/winavr/lib/gcc/../../avr/include/util/delay.h ****    constant defining the CPU clock frequency (in Hertz).
 100:c:/winavr/lib/gcc/../../avr/include/util/delay.h **** 
 101:c:/winavr/lib/gcc/../../avr/include/util/delay.h ****    The maximal possible delay is 768 us / F_CPU in MHz.
 102:c:/winavr/lib/gcc/../../avr/include/util/delay.h **** 
 103:c:/winavr/lib/gcc/../../avr/include/util/delay.h ****    If the user requests a delay greater than the maximal possible one,
 104:c:/winavr/lib/gcc/../../avr/include/util/delay.h ****    _delay_us() will automatically call _delay_ms() instead.  The user
 105:c:/winavr/lib/gcc/../../avr/include/util/delay.h ****    will not be informed about this case.
 106:c:/winavr/lib/gcc/../../avr/include/util/delay.h ****  */
 107:c:/winavr/lib/gcc/../../avr/include/util/delay.h **** void
 108:c:/winavr/lib/gcc/../../avr/include/util/delay.h **** _delay_us(double __us)
 109:c:/winavr/lib/gcc/../../avr/include/util/delay.h **** {
 110:c:/winavr/lib/gcc/../../avr/include/util/delay.h **** 	uint8_t __ticks;
 111:c:/winavr/lib/gcc/../../avr/include/util/delay.h **** 	double __tmp = ((F_CPU) / 3e6) * __us;
 112:c:/winavr/lib/gcc/../../avr/include/util/delay.h **** 	if (__tmp < 1.0)
 113:c:/winavr/lib/gcc/../../avr/include/util/delay.h **** 		__ticks = 1;
 114:c:/winavr/lib/gcc/../../avr/include/util/delay.h **** 	else if (__tmp > 255)
 115:c:/winavr/lib/gcc/../../avr/include/util/delay.h **** 	{
 116:c:/winavr/lib/gcc/../../avr/include/util/delay.h **** 		_delay_ms(__us / 1000.0);
 117:c:/winavr/lib/gcc/../../avr/include/util/delay.h **** 		return;
 118:c:/winavr/lib/gcc/../../avr/include/util/delay.h **** 	}
 119:c:/winavr/lib/gcc/../../avr/include/util/delay.h **** 	else
 120:c:/winavr/lib/gcc/../../avr/include/util/delay.h **** 		__ticks = (uint8_t)__tmp;
 121:c:/winavr/lib/gcc/../../avr/include/util/delay.h **** 	_delay_loop_1(__ticks);
 122:c:/winavr/lib/gcc/../../avr/include/util/delay.h **** }
 123:c:/winavr/lib/gcc/../../avr/include/util/delay.h **** 
 124:c:/winavr/lib/gcc/../../avr/include/util/delay.h **** 
 125:c:/winavr/lib/gcc/../../avr/include/util/delay.h **** /**
 126:c:/winavr/lib/gcc/../../avr/include/util/delay.h ****    \ingroup util_delay
 127:c:/winavr/lib/gcc/../../avr/include/util/delay.h **** 
 128:c:/winavr/lib/gcc/../../avr/include/util/delay.h ****    Perform a delay of \c __ms milliseconds, using _delay_loop_2().
 129:c:/winavr/lib/gcc/../../avr/include/util/delay.h **** 
 130:c:/winavr/lib/gcc/../../avr/include/util/delay.h ****    The macro F_CPU is supposed to be defined to a
 131:c:/winavr/lib/gcc/../../avr/include/util/delay.h ****    constant defining the CPU clock frequency (in Hertz).
 132:c:/winavr/lib/gcc/../../avr/include/util/delay.h **** 
 133:c:/winavr/lib/gcc/../../avr/include/util/delay.h ****    The maximal possible delay is 262.14 ms / F_CPU in MHz.
 134:c:/winavr/lib/gcc/../../avr/include/util/delay.h **** 
 135:c:/winavr/lib/gcc/../../avr/include/util/delay.h ****    When the user request delay which exceed the maximum possible one,
 136:c:/winavr/lib/gcc/../../avr/include/util/delay.h ****    _delay_ms() provides a decreased resolution functionality. In this
 137:c:/winavr/lib/gcc/../../avr/include/util/delay.h ****    mode _delay_ms() will work with a resolution of 1/10 ms, providing
 138:c:/winavr/lib/gcc/../../avr/include/util/delay.h ****    delays up to 6.5535 seconds (independent from CPU frequency).  The
 139:c:/winavr/lib/gcc/../../avr/include/util/delay.h ****    user will not be informed about decreased resolution.
 140:c:/winavr/lib/gcc/../../avr/include/util/delay.h ****  */
 141:c:/winavr/lib/gcc/../../avr/include/util/delay.h **** void
 142:c:/winavr/lib/gcc/../../avr/include/util/delay.h **** _delay_ms(double __ms)
 143:c:/winavr/lib/gcc/../../avr/include/util/delay.h **** {
 144:c:/winavr/lib/gcc/../../avr/include/util/delay.h **** 	uint16_t __ticks;
 145:c:/winavr/lib/gcc/../../avr/include/util/delay.h **** 	double __tmp = ((F_CPU) / 4e3) * __ms;
 145               	a0000)
 146               		ldd r22,Y+25
 147 0056 20E0      		ldd r23,Y+26
 148 0058 30E0      		ldd r24,Y+27
 149 005a 4AE7      		ldd r25,Y+28
 150 005c 53E4      		rcall __mulsf3
 151 005e 698D      		movw r26,r24
 152 0060 7A8D      		movw r24,r22
 153 0062 8B8D      		std Y+21,r24
 154 0064 9C8D      		std Y+22,r25
 155 0066 00D0      		std Y+23,r26
 156 0068 DC01      		std Y+24,r27
 158 006c 8D8B      	.LM6:
 159 006e 9E8B      		ldi r18,lo8(0x3f800000)
 160 0070 AF8B      		ldi r19,hi8(0x3f800000)
 161 0072 B88F      		ldi r20,hlo8(0x3f800000)
 146:c:/winavr/lib/gcc/../../avr/include/util/delay.h **** 	if (__tmp < 1.0)
 162               	f800000)
 163               		ldd r22,Y+21
 164 0074 20E0      		ldd r23,Y+22
 165 0076 30E0      		ldd r24,Y+23
 166 0078 40E8      		ldd r25,Y+24
 167 007a 5FE3      		rcall __ltsf2
 168 007c 6D89      		tst r24
 169 007e 7E89      		brge .L25
 170 0080 8F89      	.L21:
 172 0084 00D0      	.LM7:
 173 0086 8823      		ldi r24,lo8(1)
 174 0088 04F4      		ldi r25,hi8(1)
 175               		std Y+20,r25
 147:c:/winavr/lib/gcc/../../avr/include/util/delay.h **** 		__ticks = 1;
 176               		rjmp .L6
 177               	.L25:
 179 008c 90E0      	.LM8:
 180 008e 9C8B      		ldi r18,lo8(0x477fff00)
 181 0090 8B8B      		ldi r19,hi8(0x477fff00)
 182 0092 00C0      		ldi r20,hlo8(0x477fff00)
 183               		ldi r21,hhi8(0x477fff00)
 148:c:/winavr/lib/gcc/../../avr/include/util/delay.h **** 	else if (__tmp > 65535)
 184               	,Y+21
 185               		ldd r23,Y+22
 186 0094 20E0      		ldd r24,Y+23
 187 0096 3FEF      		ldd r25,Y+24
 188 0098 4FE7      		rcall __gtsf2
 189 009a 57E4      		cp __zero_reg__,r24
 190 009c 6D89      		brge .L26
 191 009e 7E89      	.L22:
 193 00a2 988D      	.LM9:
 194 00a4 00D0      		ldi r18,lo8(0x41200000)
 195 00a6 1816      		ldi r19,hi8(0x41200000)
 196 00a8 04F4      		ldi r20,hlo8(0x41200000)
 197               		ldi r21,hhi8(0x41200000)
 149:c:/winavr/lib/gcc/../../avr/include/util/delay.h **** 	{
 150:c:/winavr/lib/gcc/../../avr/include/util/delay.h **** 		//	__ticks = requested delay in 1/10 ms
 151:c:/winavr/lib/gcc/../../avr/include/util/delay.h **** 		__ticks = (uint16_t) (__ms * 10.0);
 198               		ldd r23,Y+26
 199               		ldd r24,Y+27
 200 00aa 20E0      		ldd r25,Y+28
 201 00ac 30E0      		rcall __mulsf3
 202 00ae 40E2      		movw r26,r24
 203 00b0 51E4      		movw r24,r22
 204 00b2 698D      		movw r22,r24
 205 00b4 7A8D      		movw r24,r26
 206 00b6 8B8D      		rcall __fixunssfsi
 207 00b8 9C8D      		movw r26,r24
 208 00ba 00D0      		movw r24,r22
 209 00bc DC01      		std Y+20,r25
 210 00be CB01      		std Y+19,r24
 211 00c0 BC01      		rjmp .L9
 212 00c2 CD01      	.L10:
 213 00c4 00D0      		ldi r24,lo8(25)
 214 00c6 DC01      		ldi r25,hi8(25)
 215 00c8 CB01      		std Y+18,r25
 216 00ca 9C8B      		std Y+17,r24
 217 00cc 8B8B      	.LBB16:
 218 00ce 00C0      	.LBB17:
 220 00d0 89E1      	.Ltext2:
 222 00d4 9A8B      	.LM10:
 223 00d6 898B      		ldd r24,Y+17
 224               		ldd r25,Y+18
 225               	/* #APP */
 226               	 ;  105 "c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h" 1
 227               		1: sbiw r24,1
   1:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h **** /* Copyright (c) 2002, Marek Michalkiewicz
   2:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h ****    Copyright (c) 2007 Joerg Wunsch
   3:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h ****    All rights reserved.
   4:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h **** 
   5:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h ****    Redistribution and use in source and binary forms, with or without
   6:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h ****    modification, are permitted provided that the following conditions are met:
   7:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h **** 
   8:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h ****    * Redistributions of source code must retain the above copyright
   9:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h ****      notice, this list of conditions and the following disclaimer.
  10:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h **** 
  11:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h ****    * Redistributions in binary form must reproduce the above copyright
  12:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h ****      notice, this list of conditions and the following disclaimer in
  13:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h ****      the documentation and/or other materials provided with the
  14:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h ****      distribution.
  15:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h **** 
  16:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h ****    * Neither the name of the copyright holders nor the names of
  17:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h ****      contributors may be used to endorse or promote products derived
  18:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h ****      from this software without specific prior written permission.
  19:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h **** 
  20:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h ****   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  21:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h ****   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  22:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h ****   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  23:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h ****   ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
  24:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h ****   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  25:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h ****   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  26:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h ****   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  27:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h ****   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  28:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h ****   CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  29:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h ****   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  30:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h ****   POSSIBILITY OF SUCH DAMAGE. */
  31:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h **** 
  32:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h **** /* $Id: delay_basic.h,v 1.1 2007/05/13 21:23:20 joerg_wunsch Exp $ */
  33:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h **** 
  34:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h **** #ifndef _UTIL_DELAY_BASIC_H_
  35:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h **** #define _UTIL_DELAY_BASIC_H_ 1
  36:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h **** 
  37:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h **** #include <inttypes.h>
  38:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h **** 
  39:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h **** /** \file */
  40:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h **** /** \defgroup util_delay_basic <util/delay_basic.h>: Basic busy-wait delay loops
  41:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h ****     \code
  42:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h ****     #include <util/delay_basic.h>
  43:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h ****     \endcode
  44:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h **** 
  45:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h ****     The functions in this header file implement simple delay loops
  46:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h ****     that perform a busy-waiting.  They are typically used to
  47:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h ****     facilitate short delays in the program execution.  They are
  48:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h ****     implemented as count-down loops with a well-known CPU cycle
  49:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h ****     count per loop iteration.  As such, no other processing can
  50:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h ****     occur simultaneously.  It should be kept in mind that the
  51:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h ****     functions described here do not disable interrupts.
  52:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h **** 
  53:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h ****     In general, for long delays, the use of hardware timers is
  54:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h ****     much preferrable, as they free the CPU, and allow for
  55:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h ****     concurrent processing of other events while the timer is
  56:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h ****     running.  However, in particular for very short delays, the
  57:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h ****     overhead of setting up a hardware timer is too much compared
  58:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h ****     to the overall delay time.
  59:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h **** 
  60:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h ****     Two inline functions are provided for the actual delay algorithms.
  61:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h **** 
  62:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h **** */
  63:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h **** 
  64:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h **** #if !defined(__DOXYGEN__)
  65:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h **** static inline void _delay_loop_1(uint8_t __count) __attribute__((always_inline));
  66:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h **** static inline void _delay_loop_2(uint16_t __count) __attribute__((always_inline));
  67:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h **** #endif
  68:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h **** 
  69:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h **** /** \ingroup util_delay_basic
  70:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h **** 
  71:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h ****     Delay loop using an 8-bit counter \c __count, so up to 256
  72:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h ****     iterations are possible.  (The value 256 would have to be passed
  73:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h ****     as 0.)  The loop executes three CPU cycles per iteration, not
  74:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h ****     including the overhead the compiler needs to setup the counter
  75:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h ****     register.
  76:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h **** 
  77:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h ****     Thus, at a CPU speed of 1 MHz, delays of up to 768 microseconds
  78:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h ****     can be achieved.
  79:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h **** */
  80:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h **** void
  81:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h **** _delay_loop_1(uint8_t __count)
  82:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h **** {
  83:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h **** 	__asm__ volatile (
  84:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h **** 		"1: dec %0" "\n\t"
  85:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h **** 		"brne 1b"
  86:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h **** 		: "=r" (__count)
  87:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h **** 		: "0" (__count)
  88:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h **** 	);
  89:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h **** }
  90:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h **** 
  91:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h **** /** \ingroup util_delay_basic
  92:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h **** 
  93:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h ****     Delay loop using a 16-bit counter \c __count, so up to 65536
  94:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h ****     iterations are possible.  (The value 65536 would have to be
  95:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h ****     passed as 0.)  The loop executes four CPU cycles per iteration,
  96:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h ****     not including the overhead the compiler requires to setup the
  97:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h ****     counter register pair.
  98:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h **** 
  99:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h ****     Thus, at a CPU speed of 1 MHz, delays of up to about 262.1
 100:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h ****     milliseconds can be achieved.
 101:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h ****  */
 102:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h **** void
 103:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h **** _delay_loop_2(uint16_t __count)
 104:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h **** {
 105:c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h **** 	__asm__ volatile (
 228               	*/
 229               		std Y+18,r25
 230 00d8 8989      		std Y+17,r24
 231 00da 9A89      	.LBE17:
 232               	.LBE16:
 234 00dc 0197      	.Ltext3:
 236               	.LM11:
 237               		ldd r24,Y+19
 238 00e0 9A8B      		ldd r25,Y+20
 239 00e2 898B      		sbiw r24,1
 240               		std Y+20,r25
 241               		std Y+19,r24
 242               	.L9:
 152:c:/winavr/lib/gcc/../../avr/include/util/delay.h **** 		while(__ticks)
 153:c:/winavr/lib/gcc/../../avr/include/util/delay.h **** 		{
 154:c:/winavr/lib/gcc/../../avr/include/util/delay.h **** 			// wait 1/10 ms
 155:c:/winavr/lib/gcc/../../avr/include/util/delay.h **** 			_delay_loop_2(((F_CPU) / 4e3) / 10);
 156:c:/winavr/lib/gcc/../../avr/include/util/delay.h **** 			__ticks --;
 244               	Y+19
 245               		ldd r25,Y+20
 246 00e4 8B89      		sbiw r24,0
 247 00e6 9C89      		brne .L10
 248 00e8 0197      		rjmp .L11
 249 00ea 9C8B      	.L26:
 251               	.LM13:
 252               		ldd r22,Y+21
 253               		ldd r23,Y+22
 254 00ee 8B89      		ldd r24,Y+23
 255 00f0 9C89      		ldd r25,Y+24
 256 00f2 0097      		rcall __fixunssfsi
 257 00f4 01F4      		movw r26,r24
 258 00f6 00C0      		movw r24,r22
 259               		std Y+20,r25
 157:c:/winavr/lib/gcc/../../avr/include/util/delay.h **** 		}
 158:c:/winavr/lib/gcc/../../avr/include/util/delay.h **** 		return;
 159:c:/winavr/lib/gcc/../../avr/include/util/delay.h **** 	}
 160:c:/winavr/lib/gcc/../../avr/include/util/delay.h **** 	else
 161:c:/winavr/lib/gcc/../../avr/include/util/delay.h **** 		__ticks = (uint16_t)__tmp;
 260               	6:
 261               		ldd r24,Y+19
 262 00f8 6D89      		ldd r25,Y+20
 263 00fa 7E89      		std Y+16,r25
 264 00fc 8F89      		std Y+15,r24
 265 00fe 988D      	.LBB18:
 266 0100 00D0      	.LBB19:
 268 0104 CB01      	.Ltext4:
 270 0108 8B8B      	.LM14:
 271               		ldd r24,Y+15
 272 010a 8B89      		ldd r25,Y+16
 273 010c 9C89      	/* #APP */
 274 010e 988B      	 ;  105 "c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h" 1
 275 0110 8F87      		1: sbiw r24,1
 276               		brne 1b
 277               	 ;  0 "" 2
 278               	/* #NOAPP */
 279               		std Y+16,r25
 280               		std Y+15,r24
 281               	.L11:
 282 0112 8F85      	.LBE19:
 283 0114 9889      	.LBE18:
 284               	.LBE15:
 285               	.LBE14:
 287 0118 01F4      	.Ltext5:
 289               	.LM15:
 290 011a 988B      		ldi r26,lo8(56)
 291 011c 8F87      		ldi r27,hi8(56)
 292               		ldi r30,lo8(56)
 293               		ldi r31,hi8(56)
 294               		ld r24,Z
 295               		andi r24,lo8(-5)
 296               		st X,r24
 298               	.LM16:
  70:lcd_4.c       **** 
  71:lcd_4.c       **** 		_delay_ms(10);
  72:lcd_4.c       **** 
  73:lcd_4.c       **** 		PORTB &= ~0x04;
 299               	16)
 300               		std Y+29,r24
 302 0120 B0E0      	.LM17:
 303 0122 E8E3      		ldi r30,lo8(56)
 304 0124 F0E0      		ldi r31,hi8(56)
 305 0126 8081      		ldd r24,Y+29
 306 0128 8B7F      		ori r24,lo8(4)
 307 012a 8C93      		st Z,r24
  74:lcd_4.c       **** 
  75:lcd_4.c       **** 		
  76:lcd_4.c       **** 
  77:lcd_4.c       **** 		b=cmnd<<4;
 308               	lo8(0x41200000)
 309               		ldi r25,hi8(0x41200000)
 310 012c 8F8D      		ldi r26,hlo8(0x41200000)
 311 012e 8295      		ldi r27,hhi8(0x41200000)
 312 0130 807F      		std Y+11,r24
 313 0132 8D8F      		std Y+12,r25
  78:lcd_4.c       **** 
  79:lcd_4.c       **** 		
  80:lcd_4.c       **** 
  81:lcd_4.c       **** 			PORTB =b| 0x04;
 314               	+13,r26
 315               		std Y+14,r27
 316 0134 E8E3      	.LBB20:
 317 0136 F0E0      	.LBB21:
 319 013a 8460      	.Ltext6:
 321 013e 80E0      	.LM18:
 322 0140 90E0      		ldi r18,lo8(0x437a0000)
 323 0142 A0E2      		ldi r19,hi8(0x437a0000)
 324 0144 B1E4      		ldi r20,hlo8(0x437a0000)
 325 0146 8B87      		ldi r21,hhi8(0x437a0000)
 326 0148 9C87      		ldd r22,Y+11
 327 014a AD87      		ldd r23,Y+12
 328 014c BE87      		ldd r24,Y+13
 329               		ldd r25,Y+14
 330               		rcall __mulsf3
 331               		movw r26,r24
 332               		movw r24,r22
 333               		std Y+7,r24
 334               		std Y+8,r25
 335 014e 20E0      		std Y+9,r26
 336 0150 30E0      		std Y+10,r27
 338 0154 53E4      	.LM19:
 339 0156 6B85      		ldi r18,lo8(0x3f800000)
 340 0158 7C85      		ldi r19,hi8(0x3f800000)
 341 015a 8D85      		ldi r20,hlo8(0x3f800000)
 342 015c 9E85      		ldi r21,hhi8(0x3f800000)
 343 015e 00D0      		ldd r22,Y+7
 344 0160 DC01      		ldd r23,Y+8
 345 0162 CB01      		ldd r24,Y+9
 346 0164 8F83      		ldd r25,Y+10
 347 0166 9887      		rcall __ltsf2
 348 0168 A987      		tst r24
 349 016a BA87      		brge .L27
 350               	.L23:
 352 016c 20E0      	.LM20:
 353 016e 30E0      		ldi r24,lo8(1)
 354 0170 40E8      		ldi r25,hi8(1)
 355 0172 5FE3      		std Y+6,r25
 356 0174 6F81      		std Y+5,r24
 357 0176 7885      		rjmp .L14
 358 0178 8985      	.L27:
 360 017c 00D0      	.LM21:
 361 017e 8823      		ldi r18,lo8(0x477fff00)
 362 0180 04F4      		ldi r19,hi8(0x477fff00)
 363               		ldi r20,hlo8(0x477fff00)
 364               		ldi r21,hhi8(0x477fff00)
 365               		ldd r22,Y+7
 366 0182 81E0      		ldd r23,Y+8
 367 0184 90E0      		ldd r24,Y+9
 368 0186 9E83      		ldd r25,Y+10
 369 0188 8D83      		rcall __gtsf2
 370 018a 00C0      		cp __zero_reg__,r24
 371               		brge .L28
 372               	.L24:
 374 018c 20E0      	.LM22:
 375 018e 3FEF      		ldi r18,lo8(0x41200000)
 376 0190 4FE7      		ldi r19,hi8(0x41200000)
 377 0192 57E4      		ldi r20,hlo8(0x41200000)
 378 0194 6F81      		ldi r21,hhi8(0x41200000)
 379 0196 7885      		ldd r22,Y+11
 380 0198 8985      		ldd r23,Y+12
 381 019a 9A85      		ldd r24,Y+13
 382 019c 00D0      		ldd r25,Y+14
 383 019e 1816      		rcall __mulsf3
 384 01a0 04F4      		movw r26,r24
 385               		movw r24,r22
 386               		movw r22,r24
 387               		movw r24,r26
 388 01a2 20E0      		rcall __fixunssfsi
 389 01a4 30E0      		movw r26,r24
 390 01a6 40E2      		movw r24,r22
 391 01a8 51E4      		std Y+6,r25
 392 01aa 6B85      		std Y+5,r24
 393 01ac 7C85      		rjmp .L17
 394 01ae 8D85      	.L18:
 395 01b0 9E85      		ldi r24,lo8(25)
 396 01b2 00D0      		ldi r25,hi8(25)
 397 01b4 DC01      		std Y+4,r25
 398 01b6 CB01      		std Y+3,r24
 399 01b8 BC01      	.LBB22:
 400 01ba CD01      	.LBB23:
 402 01be DC01      	.Ltext7:
 404 01c2 9E83      	.LM23:
 405 01c4 8D83      		ldd r24,Y+3
 406 01c6 00C0      		ldd r25,Y+4
 407               	/* #APP */
 408 01c8 89E1      	 ;  105 "c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h" 1
 409 01ca 90E0      		1: sbiw r24,1
 410 01cc 9C83      		brne 1b
 411 01ce 8B83      	 ;  0 "" 2
 412               	/* #NOAPP */
 413               		std Y+4,r25
 414               		std Y+3,r24
 415               	.LBE23:
 416               	.LBE22:
 418 01d0 8B81      	.Ltext8:
 420               	.LM24:
 421               		ldd r24,Y+5
 422 01d4 0197      		ldd r25,Y+6
 423 01d6 01F4      		sbiw r24,1
 424               		std Y+6,r25
 425               		std Y+5,r24
 426 01d8 9C83      	.L17:
 428               	.LM25:
 429               		ldd r24,Y+5
 430               		ldd r25,Y+6
 431               		sbiw r24,0
 432               		brne .L18
 433               		rjmp .L19
 434 01dc 8D81      	.L28:
 436 01e0 0197      	.LM26:
 437 01e2 9E83      		ldd r22,Y+7
 438 01e4 8D83      		ldd r23,Y+8
 439               		ldd r24,Y+9
 440               		ldd r25,Y+10
 441               		rcall __fixunssfsi
 442 01e6 8D81      		movw r26,r24
 443 01e8 9E81      		movw r24,r22
 444 01ea 0097      		std Y+6,r25
 445 01ec 01F4      		std Y+5,r24
 446 01ee 00C0      	.L14:
 447               		ldd r24,Y+5
 448               		ldd r25,Y+6
 449               		std Y+2,r25
 450 01f0 6F81      		std Y+1,r24
 451 01f2 7885      	.LBB24:
 452 01f4 8985      	.LBB25:
 454 01f8 00D0      	.Ltext9:
 456 01fc CB01      	.LM27:
 457 01fe 9E83      		ldd r24,Y+1
 458 0200 8D83      		ldd r25,Y+2
 459               	/* #APP */
 460 0202 8D81      	 ;  105 "c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h" 1
 461 0204 9E81      		1: sbiw r24,1
 462 0206 9A83      		brne 1b
 463 0208 8983      	 ;  0 "" 2
 464               	/* #NOAPP */
 465               		std Y+2,r25
 466               		std Y+1,r24
 467               	.L19:
 468               	.LBE25:
 469               	.LBE24:
 470 020a 8981      	.LBE21:
 471 020c 9A81      	.LBE20:
 473               	.Ltext10:
 475 0210 01F4      	.LM28:
 476               		ldi r26,lo8(56)
 477               		ldi r27,hi8(56)
 478 0212 9A83      		ldi r30,lo8(56)
 479 0214 8983      		ldi r31,hi8(56)
 480               		ld r24,Z
 481               		andi r24,lo8(-5)
 482               		st X,r24
 483               	/* epilogue start */
 485               	.LM29:
 486               		adiw r28,31
  82:lcd_4.c       **** 
  83:lcd_4.c       **** 		_delay_ms(10);
  84:lcd_4.c       **** 
  85:lcd_4.c       **** 		PORTB &= ~0x04;
 487               	,30
 491 021a E8E3      	.Lscope2:
 494 0220 8B7F      	.global	lcddata
 496               	lcddata:
  86:lcd_4.c       **** 
  87:lcd_4.c       **** 		
  88:lcd_4.c       **** 
  89:lcd_4.c       **** 	
  90:lcd_4.c       **** 
  91:lcd_4.c       **** 
  92:lcd_4.c       **** 
  93:lcd_4.c       **** 
  94:lcd_4.c       **** 
  95:lcd_4.c       **** }
 497               	,0,101,.LM30-.LFBB3
 498               	.LM30:
 499 0224 6F96      	.LFBB3:
 500 0226 0FB6      		push r29
 501 0228 F894      		push r28
 502 022a DEBF      		in r28,__SP_L__
 503 022c 0FBE      		in r29,__SP_H__
 504 022e CDBF      		sbiw r28,31
 505 0230 CF91      		in __tmp_reg__,__SREG__
 506 0232 DF91      		cli
 507 0234 0895      		out __SP_H__,r29
 508               		out __SREG__,__tmp_reg__
 509               		out __SP_L__,r28
 510               	/* prologue: function */
 511               	/* frame size = 31 */
 512               		std Y+31,r24
 514               	.LM31:
 515               		ldd r24,Y+31
 516               		andi r24,lo8(-16)
 517               		std Y+30,r24
  96:lcd_4.c       **** 
  97:lcd_4.c       **** 
  98:lcd_4.c       **** 
  99:lcd_4.c       **** void lcddata(unsigned char data)
 100:lcd_4.c       **** 
 101:lcd_4.c       **** {
 519               	)
 520               		ldi r31,hi8(56)
 521               		ldd r24,Y+30
 522 0236 DF93      		ori r24,lo8(5)
 523 0238 CF93      		st Z,r24
 524 023a CDB7      		ldi r24,lo8(0x41200000)
 525 023c DEB7      		ldi r25,hi8(0x41200000)
 526 023e 6F97      		ldi r26,hlo8(0x41200000)
 527 0240 0FB6      		ldi r27,hhi8(0x41200000)
 528 0242 F894      		std Y+25,r24
 529 0244 DEBF      		std Y+26,r25
 530 0246 0FBE      		std Y+27,r26
 531 0248 CDBF      		std Y+28,r27
 532               	.LBB38:
 533               	.LBB39:
 102:lcd_4.c       **** 
 103:lcd_4.c       **** 		unsigned char a,b;
 104:lcd_4.c       **** 
 105:lcd_4.c       **** 		a=data & 0xf0;
 535               	n	68,0,145,.LM33-.LFBB3
 536               	.LM33:
 537 024c 8F8D      		ldi r18,lo8(0x437a0000)
 538 024e 807F      		ldi r19,hi8(0x437a0000)
 539 0250 8E8F      		ldi r20,hlo8(0x437a0000)
 106:lcd_4.c       **** 
 107:lcd_4.c       **** 		PORTB = a|0x05;
 540               	r21,hhi8(0x437a0000)
 541               		ldd r22,Y+25
 542 0252 E8E3      		ldd r23,Y+26
 543 0254 F0E0      		ldd r24,Y+27
 544 0256 8E8D      		ldd r25,Y+28
 545 0258 8560      		rcall __mulsf3
 546 025a 8083      		movw r26,r24
 547 025c 80E0      		movw r24,r22
 548 025e 90E0      		std Y+21,r24
 549 0260 A0E2      		std Y+22,r25
 550 0262 B1E4      		std Y+23,r26
 551 0264 898F      		std Y+24,r27
 553 0268 AB8F      	.LM34:
 554 026a BC8F      		ldi r18,lo8(0x3f800000)
 555               		ldi r19,hi8(0x3f800000)
 556               		ldi r20,hlo8(0x3f800000)
 557               		ldi r21,hhi8(0x3f800000)
 558               		ldd r22,Y+21
 559               		ldd r23,Y+22
 560               		ldd r24,Y+23
 561 026c 20E0      		ldd r25,Y+24
 562 026e 30E0      		rcall __ltsf2
 563 0270 4AE7      		tst r24
 564 0272 53E4      		brge .L51
 565 0274 698D      	.L47:
 567 0278 8B8D      	.LM35:
 568 027a 9C8D      		ldi r24,lo8(1)
 569 027c 00D0      		ldi r25,hi8(1)
 570 027e DC01      		std Y+20,r25
 571 0280 CB01      		std Y+19,r24
 572 0282 8D8B      		rjmp .L32
 573 0284 9E8B      	.L51:
 575 0288 B88F      	.LM36:
 576               		ldi r18,lo8(0x477fff00)
 577               		ldi r19,hi8(0x477fff00)
 578 028a 20E0      		ldi r20,hlo8(0x477fff00)
 579 028c 30E0      		ldi r21,hhi8(0x477fff00)
 580 028e 40E8      		ldd r22,Y+21
 581 0290 5FE3      		ldd r23,Y+22
 582 0292 6D89      		ldd r24,Y+23
 583 0294 7E89      		ldd r25,Y+24
 584 0296 8F89      		rcall __gtsf2
 585 0298 988D      		cp __zero_reg__,r24
 586 029a 00D0      		brge .L52
 587 029c 8823      	.L48:
 589               	.LM37:
 590               		ldi r18,lo8(0x41200000)
 591               		ldi r19,hi8(0x41200000)
 592 02a0 81E0      		ldi r20,hlo8(0x41200000)
 593 02a2 90E0      		ldi r21,hhi8(0x41200000)
 594 02a4 9C8B      		ldd r22,Y+25
 595 02a6 8B8B      		ldd r23,Y+26
 596 02a8 00C0      		ldd r24,Y+27
 597               		ldd r25,Y+28
 598               		rcall __mulsf3
 599               		movw r26,r24
 600 02aa 20E0      		movw r24,r22
 601 02ac 3FEF      		movw r22,r24
 602 02ae 4FE7      		movw r24,r26
 603 02b0 57E4      		rcall __fixunssfsi
 604 02b2 6D89      		movw r26,r24
 605 02b4 7E89      		movw r24,r22
 606 02b6 8F89      		std Y+20,r25
 607 02b8 988D      		std Y+19,r24
 608 02ba 00D0      		rjmp .L35
 609 02bc 1816      	.L36:
 610 02be 04F4      		ldi r24,lo8(25)
 611               		ldi r25,hi8(25)
 612               		std Y+18,r25
 613               		std Y+17,r24
 614 02c0 20E0      	.LBB40:
 615 02c2 30E0      	.LBB41:
 617 02c6 51E4      	.Ltext12:
 619 02ca 7A8D      	.LM38:
 620 02cc 8B8D      		ldd r24,Y+17
 621 02ce 9C8D      		ldd r25,Y+18
 622 02d0 00D0      	/* #APP */
 623 02d2 DC01      	 ;  105 "c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h" 1
 624 02d4 CB01      		1: sbiw r24,1
 625 02d6 BC01      		brne 1b
 626 02d8 CD01      	 ;  0 "" 2
 627 02da 00D0      	/* #NOAPP */
 628 02dc DC01      		std Y+18,r25
 629 02de CB01      		std Y+17,r24
 630 02e0 9C8B      	.LBE41:
 631 02e2 8B8B      	.LBE40:
 633               	.Ltext13:
 635 02e8 90E0      	.LM39:
 636 02ea 9A8B      		ldd r24,Y+19
 637 02ec 898B      		ldd r25,Y+20
 638               		sbiw r24,1
 639               		std Y+20,r25
 640               		std Y+19,r24
 641               	.L35:
 643               	.LM40:
 644 02ee 8989      		ldd r24,Y+19
 645 02f0 9A89      		ldd r25,Y+20
 646               		sbiw r24,0
 647               		brne .L36
 648 02f2 0197      		rjmp .L37
 649 02f4 01F4      	.L52:
 651               	.LM41:
 652 02f6 9A8B      		ldd r22,Y+21
 653 02f8 898B      		ldd r23,Y+22
 654               		ldd r24,Y+23
 655               		ldd r25,Y+24
 656               		rcall __fixunssfsi
 657               		movw r26,r24
 658               		movw r24,r22
 659               		std Y+20,r25
 660 02fa 8B89      		std Y+19,r24
 661 02fc 9C89      	.L32:
 662 02fe 0197      		ldd r24,Y+19
 663 0300 9C8B      		ldd r25,Y+20
 664 0302 8B8B      		std Y+16,r25
 665               		std Y+15,r24
 666               	.LBB42:
 667               	.LBB43:
 669 0306 9C89      	.Ltext14:
 671 030a 01F4      	.LM42:
 672 030c 00C0      		ldd r24,Y+15
 673               		ldd r25,Y+16
 674               	/* #APP */
 675               	 ;  105 "c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h" 1
 676 030e 6D89      		1: sbiw r24,1
 677 0310 7E89      		brne 1b
 678 0312 8F89      	 ;  0 "" 2
 679 0314 988D      	/* #NOAPP */
 680 0316 00D0      		std Y+16,r25
 681 0318 DC01      		std Y+15,r24
 682 031a CB01      	.L37:
 683 031c 9C8B      	.LBE43:
 684 031e 8B8B      	.LBE42:
 685               	.LBE39:
 686 0320 8B89      	.LBE38:
 688 0324 988B      	.Ltext15:
 690               	.LM43:
 691               		ldi r26,lo8(56)
 692               		ldi r27,hi8(56)
 693               		ldi r30,lo8(56)
 694               		ldi r31,hi8(56)
 695               		ld r24,Z
 696 0328 8F85      		andi r24,lo8(-5)
 697 032a 9889      		st X,r24
 699               	.LM44:
 700 032c 0197      		ldd r24,Y+31
 701 032e 01F4      		swap r24
 702               		andi r24,lo8(-16)
 703               		std Y+29,r24
 705 0332 8F87      	.LM45:
 706               		ldi r30,lo8(56)
 707               		ldi r31,hi8(56)
 708               		ldd r24,Y+29
 709               		ori r24,lo8(5)
 710               		st Z,r24
 711               		ldi r24,lo8(0x41200000)
 712               		ldi r25,hi8(0x41200000)
 108:lcd_4.c       **** 
 109:lcd_4.c       **** 		_delay_ms(10);
 110:lcd_4.c       **** 
 111:lcd_4.c       **** 		PORTB &= ~0x04;
 713               	/delay.h",132,0,0,.Ltext16
 714               	.Ltext16:
 716 0336 B0E0      	.LM46:
 717 0338 E8E3      		ldi r18,lo8(0x437a0000)
 718 033a F0E0      		ldi r19,hi8(0x437a0000)
 719 033c 8081      		ldi r20,hlo8(0x437a0000)
 720 033e 8B7F      		ldi r21,hhi8(0x437a0000)
 721 0340 8C93      		ldd r22,Y+11
 112:lcd_4.c       **** 
 113:lcd_4.c       **** 		
 114:lcd_4.c       **** 
 115:lcd_4.c       **** 		b=data<<4;
 722               	Y+12
 723               		ldd r24,Y+13
 724 0342 8F8D      		ldd r25,Y+14
 725 0344 8295      		rcall __mulsf3
 726 0346 807F      		movw r26,r24
 727 0348 8D8F      		movw r24,r22
 116:lcd_4.c       **** 
 117:lcd_4.c       **** 		PORTB = b|0x05;
 728               	+7,r24
 729               		std Y+8,r25
 730 034a E8E3      		std Y+9,r26
 731 034c F0E0      		std Y+10,r27
 733 0350 8560      	.LM47:
 734 0352 8083      		ldi r18,lo8(0x3f800000)
 735 0354 80E0      		ldi r19,hi8(0x3f800000)
 736 0356 90E0      		ldi r20,hlo8(0x3f800000)
 737 0358 A0E2      		ldi r21,hhi8(0x3f800000)
 738 035a B1E4      		ldd r22,Y+7
 739 035c 8B87      		ldd r23,Y+8
 740 035e 9C87      		ldd r24,Y+9
 741 0360 AD87      		ldd r25,Y+10
 742 0362 BE87      		rcall __ltsf2
 743               		tst r24
 744               		brge .L53
 745               	.L49:
 747               	.LM48:
 748               		ldi r24,lo8(1)
 749 0364 20E0      		ldi r25,hi8(1)
 750 0366 30E0      		std Y+6,r25
 751 0368 4AE7      		std Y+5,r24
 752 036a 53E4      		rjmp .L40
 753 036c 6B85      	.L53:
 755 0370 8D85      	.LM49:
 756 0372 9E85      		ldi r18,lo8(0x477fff00)
 757 0374 00D0      		ldi r19,hi8(0x477fff00)
 758 0376 DC01      		ldi r20,hlo8(0x477fff00)
 759 0378 CB01      		ldi r21,hhi8(0x477fff00)
 760 037a 8F83      		ldd r22,Y+7
 761 037c 9887      		ldd r23,Y+8
 762 037e A987      		ldd r24,Y+9
 763 0380 BA87      		ldd r25,Y+10
 764               		rcall __gtsf2
 765               		cp __zero_reg__,r24
 766 0382 20E0      		brge .L54
 767 0384 30E0      	.L50:
 769 0388 5FE3      	.LM50:
 770 038a 6F81      		ldi r18,lo8(0x41200000)
 771 038c 7885      		ldi r19,hi8(0x41200000)
 772 038e 8985      		ldi r20,hlo8(0x41200000)
 773 0390 9A85      		ldi r21,hhi8(0x41200000)
 774 0392 00D0      		ldd r22,Y+11
 775 0394 8823      		ldd r23,Y+12
 776 0396 04F4      		ldd r24,Y+13
 777               		ldd r25,Y+14
 778               		rcall __mulsf3
 779               		movw r26,r24
 780 0398 81E0      		movw r24,r22
 781 039a 90E0      		movw r22,r24
 782 039c 9E83      		movw r24,r26
 783 039e 8D83      		rcall __fixunssfsi
 784 03a0 00C0      		movw r26,r24
 785               		movw r24,r22
 786               		std Y+6,r25
 787               		std Y+5,r24
 788 03a2 20E0      		rjmp .L43
 789 03a4 3FEF      	.L44:
 790 03a6 4FE7      		ldi r24,lo8(25)
 791 03a8 57E4      		ldi r25,hi8(25)
 792 03aa 6F81      		std Y+4,r25
 793 03ac 7885      		std Y+3,r24
 794 03ae 8985      	.LBB46:
 795 03b0 9A85      	.LBB47:
 797 03b4 1816      	.Ltext17:
 799               	.LM51:
 800               		ldd r24,Y+3
 801               		ldd r25,Y+4
 802 03b8 20E0      	/* #APP */
 803 03ba 30E0      	 ;  105 "c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h" 1
 804 03bc 40E2      		1: sbiw r24,1
 805 03be 51E4      		brne 1b
 806 03c0 6B85      	 ;  0 "" 2
 807 03c2 7C85      	/* #NOAPP */
 808 03c4 8D85      		std Y+4,r25
 809 03c6 9E85      		std Y+3,r24
 810 03c8 00D0      	.LBE47:
 811 03ca DC01      	.LBE46:
 813 03ce BC01      	.Ltext18:
 815 03d2 00D0      	.LM52:
 816 03d4 DC01      		ldd r24,Y+5
 817 03d6 CB01      		ldd r25,Y+6
 818 03d8 9E83      		sbiw r24,1
 819 03da 8D83      		std Y+6,r25
 820 03dc 00C0      		std Y+5,r24
 821               	.L43:
 823 03e0 90E0      	.LM53:
 824 03e2 9C83      		ldd r24,Y+5
 825 03e4 8B83      		ldd r25,Y+6
 826               		sbiw r24,0
 827               		brne .L44
 828               		rjmp .L45
 829               	.L54:
 831               	.LM54:
 832 03e6 8B81      		ldd r22,Y+7
 833 03e8 9C81      		ldd r23,Y+8
 834               		ldd r24,Y+9
 835               		ldd r25,Y+10
 836 03ea 0197      		rcall __fixunssfsi
 837 03ec 01F4      		movw r26,r24
 838               		movw r24,r22
 839               		std Y+6,r25
 840 03ee 9C83      		std Y+5,r24
 841 03f0 8B83      	.L40:
 842               		ldd r24,Y+5
 843               		ldd r25,Y+6
 844               		std Y+2,r25
 845               		std Y+1,r24
 846               	.LBB48:
 847               	.LBB49:
 849 03f4 9E81      	.Ltext19:
 851 03f8 9E83      	.LM55:
 852 03fa 8D83      		ldd r24,Y+1
 853               		ldd r25,Y+2
 854               	/* #APP */
 855               	 ;  105 "c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h" 1
 856 03fc 8D81      		1: sbiw r24,1
 857 03fe 9E81      		brne 1b
 858 0400 0097      	 ;  0 "" 2
 859 0402 01F4      	/* #NOAPP */
 860 0404 00C0      		std Y+2,r25
 861               		std Y+1,r24
 862               	.L45:
 863               	.LBE49:
 864 0406 6F81      	.LBE48:
 865 0408 7885      	.LBE45:
 866 040a 8985      	.LBE44:
 868 040e 00D0      	.Ltext20:
 870 0412 CB01      	.LM56:
 871 0414 9E83      		ldi r26,lo8(56)
 872 0416 8D83      		ldi r27,hi8(56)
 873               		ldi r30,lo8(56)
 874 0418 8D81      		ldi r31,hi8(56)
 875 041a 9E81      		ld r24,Z
 876 041c 9A83      		andi r24,lo8(-5)
 877 041e 8983      		st X,r24
 878               	/* epilogue start */
 880               	.LM57:
 881               		adiw r28,31
 882               		in __tmp_reg__,__SREG__
 883               		cli
 884 0420 8981      		out __SP_H__,r29
 885 0422 9A81      		out __SREG__,__tmp_reg__
 886               		out __SP_L__,r28
 887               		pop r28
 888 0424 0197      		pop r29
 889 0426 01F4      		ret
 895               	.Lscope3:
 897               	.global	lcd_init
 899               	lcd_init:
 118:lcd_4.c       **** 
 119:lcd_4.c       **** 		_delay_ms(10);	
 120:lcd_4.c       **** 
 121:lcd_4.c       **** 		PORTB &= ~0x04;
 901               	ll lcdcommand
 903 042c A8E3      	.LM60:
 904 042e B0E0      		ldi r24,lo8(2)
 905 0430 E8E3      		rcall lcdcommand
 907 0434 8081      	.LM61:
 908 0436 8B7F      		ldi r24,lo8(14)
 909 0438 8C93      		rcall lcdcommand
 122:lcd_4.c       **** 
 123:lcd_4.c       **** 		
 124:lcd_4.c       **** 
 125:lcd_4.c       **** 		
 126:lcd_4.c       **** 
 127:lcd_4.c       **** 		
 128:lcd_4.c       **** 
 129:lcd_4.c       **** 
 130:lcd_4.c       **** 
 131:lcd_4.c       **** 
 132:lcd_4.c       **** 
 133:lcd_4.c       **** }
 911               	i r24,lo8(6)
 912               		rcall lcdcommand
 914 043c 0FB6      	.LM63:
 915 043e F894      		ldi r24,lo8(1)
 916 0440 DEBF      		rcall lcdcommand
 918 0444 CDBF      	.LM64:
 919 0446 CF91      		ldi r24,lo8(-128)
 920 0448 DF91      		rcall lcdcommand
 921 044a 0895      	/* epilogue start */
 923               	.LM65:
 924               		pop r28
 925               		pop r29
 926               		ret
 928               	.Lscope4:
 929               		.data
 930               	.LC0:
 931               		.string	"HELLO WORLD!"
 134:lcd_4.c       **** 
 135:lcd_4.c       **** 
 136:lcd_4.c       **** 
 137:lcd_4.c       **** void lcd_init()
 138:lcd_4.c       **** 
 139:lcd_4.c       **** {
 932               	ME"
 933               		.text
 935 044c DF93      	.global	main
 937 0450 CDB7      	main:
 939               	.LM66:
 940               	.LFBB5:
 140:lcd_4.c       **** 
 141:lcd_4.c       ****  lcdcommand(0x28);
 941               	
 942               		push r28
 943 0454 88E2      		in r28,__SP_L__
 944 0456 00D0      		in r29,__SP_H__
 142:lcd_4.c       **** 
 143:lcd_4.c       ****   lcdcommand(0x02);
 945               	iw r28,61
 946               		in __tmp_reg__,__SREG__
 947 0458 82E0      		cli
 948 045a 00D0      		out __SP_H__,r29
 144:lcd_4.c       **** 
 145:lcd_4.c       ****    lcdcommand(0x0e);
 949               	 __SREG__,__tmp_reg__
 950               		out __SP_L__,r28
 951 045c 8EE0      	/* prologue: function */
 952 045e 00D0      	/* frame size = 61 */
 146:lcd_4.c       **** 
 147:lcd_4.c       ****     lcdcommand(0x06);
 953               	abn	68,0,171,.LM67-.LFBB5
 954               	.LM67:
 955 0460 86E0      		ldi r30,lo8(52)
 956 0462 00D0      		ldi r31,hi8(52)
 148:lcd_4.c       **** 
 149:lcd_4.c       ****     lcdcommand(0x01);
 957               	 r24,lo8(-1)
 958               		st Z,r24
 960 0466 00D0      	.LM68:
 150:lcd_4.c       **** 
 151:lcd_4.c       ****      lcdcommand(0x80);
 961               	 r30,lo8(55)
 962               		ldi r31,hi8(55)
 963 0468 80E8      		ldi r24,lo8(-1)
 964 046a 00D0      		st Z,r24
 152:lcd_4.c       **** 
 153:lcd_4.c       **** }
 966               	:
 967               		rcall lcd_init
 969 046e DF91      	.LM70:
 970 0470 0895      		movw r24,r28
 971               		adiw r24,31
 972               		std Y+53,r25
 973               		std Y+52,r24
 974               		ldi r30,lo8(.LC0)
 975 0000 4845 4C4C 		ldi r31,hi8(.LC0)
 975      4F20 574F 
 975      524C 4421 
 975      00
 976               		std Y+55,r31
 977 000d 5745 4C43 		std Y+54,r30
 977      4F4D 4500 
 978               		ldi r31,lo8(13)
 979               		std Y+56,r31
 980               	.L58:
 981               		ldd r30,Y+54
 982               		ldd r31,Y+55
 154:lcd_4.c       **** 
 155:lcd_4.c       **** 
 156:lcd_4.c       **** 
 157:lcd_4.c       **** 
 158:lcd_4.c       **** 
 159:lcd_4.c       **** // ***********************************************************
 160:lcd_4.c       **** 
 161:lcd_4.c       **** // Main program
 162:lcd_4.c       **** 
 163:lcd_4.c       **** //
 164:lcd_4.c       **** 
 165:lcd_4.c       **** int main(void) {
 983               	,Y+54
 984               		ldd r25,Y+55
 985               		adiw r24,1
 986 0472 DF93      		std Y+55,r25
 987 0474 CF93      		std Y+54,r24
 988 0476 CDB7      		ldd r30,Y+52
 989 0478 DEB7      		ldd r31,Y+53
 990 047a ED97      		st Z,r0
 991 047c 0FB6      		ldd r24,Y+52
 992 047e F894      		ldd r25,Y+53
 993 0480 DEBF      		adiw r24,1
 994 0482 0FBE      		std Y+53,r25
 995 0484 CDBF      		std Y+52,r24
 996               		ldd r25,Y+56
 997               		subi r25,lo8(-(-1))
 166:lcd_4.c       **** 
 167:lcd_4.c       **** 
 168:lcd_4.c       **** 
 169:lcd_4.c       **** 
 170:lcd_4.c       **** 
 171:lcd_4.c       **** 		DDRC=0xFF;
 998               	ldd r30,Y+56
 999               		tst r30
 1000 0486 E4E3      		brne .L58
 1002 048a 8FEF      	.LM71:
 1003 048c 8083      		movw r24,r28
 172:lcd_4.c       **** 
 173:lcd_4.c       **** 		DDRB=0xFF;
 1004               	r24,44
 1005               		std Y+58,r25
 1006 048e E7E3      		std Y+57,r24
 1007 0490 F0E0      		ldi r30,lo8(.LC1)
 1008 0492 8FEF      		ldi r31,hi8(.LC1)
 1009 0494 8083      		std Y+60,r31
 174:lcd_4.c       **** 
 175:lcd_4.c       **** 		lcd_init();
 1010               	+59,r30
 1011               		ldi r31,lo8(8)
 1012 0496 00D0      		std Y+61,r31
 176:lcd_4.c       **** 
 177:lcd_4.c       **** 		char str[]="HELLO WORLD!";
 1013               	9:
 1014               		ldd r30,Y+59
 1015 0498 CE01      		ldd r31,Y+60
 1016 049a 4F96      		ld r0,Z
 1017 049c 9DAB      		ldd r24,Y+59
 1018 049e 8CAB      		ldd r25,Y+60
 1019 04a0 E0E0      		adiw r24,1
 1020 04a2 F0E0      		std Y+60,r25
 1021 04a4 FFAB      		std Y+59,r24
 1022 04a6 EEAB      		ldd r30,Y+57
 1023 04a8 FDE0      		ldd r31,Y+58
 1024 04aa F8AF      		st Z,r0
 1025               		ldd r24,Y+57
 1026 04ac EEA9      		ldd r25,Y+58
 1027 04ae FFA9      		adiw r24,1
 1028 04b0 0080      		std Y+58,r25
 1029 04b2 8EA9      		std Y+57,r24
 1030 04b4 9FA9      		ldd r25,Y+61
 1031 04b6 0196      		subi r25,lo8(-(-1))
 1032 04b8 9FAB      		std Y+61,r25
 1033 04ba 8EAB      		ldd r30,Y+61
 1034 04bc ECA9      		tst r30
 1035 04be FDA9      		brne .L59
 1037 04c2 8CA9      	.LM72:
 1038 04c4 9DA9      		std Y+30,__zero_reg__
 1039 04c6 0196      		std Y+29,__zero_reg__
 1040 04c8 9DAB      		rjmp .L60
 1041 04ca 8CAB      	.L69:
 1043 04ce 9150      	.LM73:
 1044 04d0 98AF      		ldd r18,Y+29
 1045 04d2 E8AD      		ldd r19,Y+30
 1046 04d4 EE23      		movw r24,r28
 1047 04d6 01F4      		adiw r24,31
 178:lcd_4.c       **** 
 179:lcd_4.c       **** 		char str2[]="WELCOME";
 1048               	,r19
 1049               		ld r18,Z
 1050 04d8 CE01      		ldd r24,Y+29
 1051 04da 8C96      		ldd r25,Y+30
 1052 04dc 9AAF      		adiw r24,1
 1053 04de 89AF      		std Y+30,r25
 1054 04e0 E0E0      		std Y+29,r24
 1055 04e2 F0E0      		mov r24,r18
 1056 04e4 FCAF      		rcall lcddata
 1057 04e6 EBAF      		ldi r24,lo8(0x42200000)
 1058 04e8 F8E0      		ldi r25,hi8(0x42200000)
 1059 04ea FDAF      		ldi r26,hlo8(0x42200000)
 1060               		ldi r27,hhi8(0x42200000)
 1061 04ec EBAD      		std Y+25,r24
 1062 04ee FCAD      		std Y+26,r25
 1063 04f0 0080      		std Y+27,r26
 1064 04f2 8BAD      		std Y+28,r27
 1065 04f4 9CAD      	.LBB62:
 1066 04f6 0196      	.LBB63:
 1068 04fa 8BAF      	.Ltext21:
 1070 04fe FAAD      	.LM74:
 1071 0500 0082      		ldi r18,lo8(0x437a0000)
 1072 0502 89AD      		ldi r19,hi8(0x437a0000)
 1073 0504 9AAD      		ldi r20,hlo8(0x437a0000)
 1074 0506 0196      		ldi r21,hhi8(0x437a0000)
 1075 0508 9AAF      		ldd r22,Y+25
 1076 050a 89AF      		ldd r23,Y+26
 1077 050c 9DAD      		ldd r24,Y+27
 1078 050e 9150      		ldd r25,Y+28
 1079 0510 9DAF      		rcall __mulsf3
 1080 0512 EDAD      		movw r26,r24
 1081 0514 EE23      		movw r24,r22
 1082 0516 01F4      		std Y+21,r24
 180:lcd_4.c       **** 
 181:lcd_4.c       **** 		int i=0;
 1083               	24,r27
 1085 0518 1E8E      	.LM75:
 1086 051a 1D8E      		ldi r18,lo8(0x3f800000)
 1087 051c 00C0      		ldi r19,hi8(0x3f800000)
 1088               		ldi r20,hlo8(0x3f800000)
 182:lcd_4.c       **** 
 183:lcd_4.c       **** 		
 184:lcd_4.c       **** 
 185:lcd_4.c       **** 
 186:lcd_4.c       **** 
 187:lcd_4.c       ****    while(1) {             // Infinite loop; define here the
 188:lcd_4.c       **** 
 189:lcd_4.c       ****               while(str[i] != '\0')
 190:lcd_4.c       **** 
 191:lcd_4.c       ****               {
 192:lcd_4.c       **** 
 193:lcd_4.c       **** 
 194:lcd_4.c       **** 
 195:lcd_4.c       ****                 lcddata(str[i++]);
 1089               	21,hhi8(0x3f800000)
 1090               		ldd r22,Y+21
 1091 051e 2D8D      		ldd r23,Y+22
 1092 0520 3E8D      		ldd r24,Y+23
 1093 0522 CE01      		ldd r25,Y+24
 1094 0524 4F96      		rcall __ltsf2
 1095 0526 FC01      		tst r24
 1096 0528 E20F      		brge .L85
 1097 052a F31F      	.L81:
 1099 052e 8D8D      	.LM76:
 1100 0530 9E8D      		ldi r24,lo8(1)
 1101 0532 0196      		ldi r25,hi8(1)
 1102 0534 9E8F      		std Y+20,r25
 1103 0536 8D8F      		std Y+19,r24
 1104 0538 822F      		rjmp .L63
 1105 053a 00D0      	.L85:
 1107 053e 90E0      	.LM77:
 1108 0540 A0E2      		ldi r18,lo8(0x477fff00)
 1109 0542 B2E4      		ldi r19,hi8(0x477fff00)
 1110 0544 898F      		ldi r20,hlo8(0x477fff00)
 1111 0546 9A8F      		ldi r21,hhi8(0x477fff00)
 1112 0548 AB8F      		ldd r22,Y+21
 1113 054a BC8F      		ldd r23,Y+22
 1114               		ldd r24,Y+23
 1115               		ldd r25,Y+24
 1116               		rcall __gtsf2
 1117               		cp __zero_reg__,r24
 1118               		brge .L86
 1119               	.L82:
 1121 054e 30E0      	.LM78:
 1122 0550 4AE7      		ldi r18,lo8(0x41200000)
 1123 0552 53E4      		ldi r19,hi8(0x41200000)
 1124 0554 698D      		ldi r20,hlo8(0x41200000)
 1125 0556 7A8D      		ldi r21,hhi8(0x41200000)
 1126 0558 8B8D      		ldd r22,Y+25
 1127 055a 9C8D      		ldd r23,Y+26
 1128 055c 00D0      		ldd r24,Y+27
 1129 055e DC01      		ldd r25,Y+28
 1130 0560 CB01      		rcall __mulsf3
 1131 0562 8D8B      		movw r26,r24
 1132 0564 9E8B      		movw r24,r22
 1133 0566 AF8B      		movw r22,r24
 1134 0568 B88F      		movw r24,r26
 1135               		rcall __fixunssfsi
 1136               		movw r26,r24
 1137 056a 20E0      		movw r24,r22
 1138 056c 30E0      		std Y+20,r25
 1139 056e 40E8      		std Y+19,r24
 1140 0570 5FE3      		rjmp .L66
 1141 0572 6D89      	.L67:
 1142 0574 7E89      		ldi r24,lo8(25)
 1143 0576 8F89      		ldi r25,hi8(25)
 1144 0578 988D      		std Y+18,r25
 1145 057a 00D0      		std Y+17,r24
 1146 057c 8823      	.LBB64:
 1147 057e 04F4      	.LBB65:
 1149               	.Ltext22:
 1151 0580 81E0      	.LM79:
 1152 0582 90E0      		ldd r24,Y+17
 1153 0584 9C8B      		ldd r25,Y+18
 1154 0586 8B8B      	/* #APP */
 1155 0588 00C0      	 ;  105 "c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h" 1
 1156               		1: sbiw r24,1
 1157               		brne 1b
 1158               	 ;  0 "" 2
 1159 058a 20E0      	/* #NOAPP */
 1160 058c 3FEF      		std Y+18,r25
 1161 058e 4FE7      		std Y+17,r24
 1162 0590 57E4      	.LBE65:
 1163 0592 6D89      	.LBE64:
 1165 0596 8F89      	.Ltext23:
 1167 059a 00D0      	.LM80:
 1168 059c 1816      		ldd r24,Y+19
 1169 059e 04F4      		ldd r25,Y+20
 1170               		sbiw r24,1
 1171               		std Y+20,r25
 1172               		std Y+19,r24
 1173 05a0 20E0      	.L66:
 1175 05a4 40E2      	.LM81:
 1176 05a6 51E4      		ldd r24,Y+19
 1177 05a8 698D      		ldd r25,Y+20
 1178 05aa 7A8D      		sbiw r24,0
 1179 05ac 8B8D      		brne .L67
 1180 05ae 9C8D      		rjmp .L60
 1181 05b0 00D0      	.L86:
 1183 05b4 CB01      	.LM82:
 1184 05b6 BC01      		ldd r22,Y+21
 1185 05b8 CD01      		ldd r23,Y+22
 1186 05ba 00D0      		ldd r24,Y+23
 1187 05bc DC01      		ldd r25,Y+24
 1188 05be CB01      		rcall __fixunssfsi
 1189 05c0 9C8B      		movw r26,r24
 1190 05c2 8B8B      		movw r24,r22
 1191 05c4 00C0      		std Y+20,r25
 1192               		std Y+19,r24
 1193 05c6 89E1      	.L63:
 1194 05c8 90E0      		ldd r24,Y+19
 1195 05ca 9A8B      		ldd r25,Y+20
 1196 05cc 898B      		std Y+16,r25
 1197               		std Y+15,r24
 1198               	.LBB66:
 1199               	.LBB67:
 1201               	.Ltext24:
 1203 05ce 8989      	.LM83:
 1204 05d0 9A89      		ldd r24,Y+15
 1205               		ldd r25,Y+16
 1206               	/* #APP */
 1207 05d2 0197      	 ;  105 "c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h" 1
 1208 05d4 01F4      		1: sbiw r24,1
 1209               		brne 1b
 1210               	 ;  0 "" 2
 1211 05d6 9A8B      	/* #NOAPP */
 1212 05d8 898B      		std Y+16,r25
 1213               		std Y+15,r24
 1214               	.L60:
 1215               	.LBE67:
 1216               	.LBE66:
 1217               	.LBE63:
 1218               	.LBE62:
 1220 05dc 9C89      	.Ltext25:
 1222 05e0 9C8B      	.LM84:
 1223 05e2 8B8B      		ldd r18,Y+29
 1224               		ldd r19,Y+30
 1225               		movw r24,r28
 1226               		adiw r24,31
 1227 05e4 8B89      		movw r30,r24
 1228 05e6 9C89      		add r30,r18
 1229 05e8 0097      		adc r31,r19
 1230 05ea 01F4      		ld r24,Z
 1231 05ec 00C0      		tst r24
 1232               		breq .+2
 1233               		rjmp .L69
 1235 05ee 6D89      	.LM85:
 1236 05f0 7E89      		ldi r24,lo8(-64)
 1237 05f2 8F89      		rcall lcdcommand
 1239 05f6 00D0      	.LM86:
 1240 05f8 DC01      		std Y+30,__zero_reg__
 1241 05fa CB01      		std Y+29,__zero_reg__
 1242 05fc 9C8B      		rjmp .L70
 1243 05fe 8B8B      	.L79:
 1245 0600 8B89      	.LM87:
 1246 0602 9C89      		ldd r18,Y+29
 1247 0604 988B      		ldd r19,Y+30
 1248 0606 8F87      		movw r24,r28
 1249               		adiw r24,44
 1250               		movw r30,r24
 1251               		add r30,r18
 1252               		adc r31,r19
 1253               		ld r18,Z
 1254               		ldd r24,Y+29
 1255 0608 8F85      		ldd r25,Y+30
 1256 060a 9889      		adiw r24,1
 1257               		std Y+30,r25
 1258               		std Y+29,r24
 1259 060c 0197      		mov r24,r18
 1260 060e 01F4      		rcall lcddata
 1261               		ldi r24,lo8(0x42200000)
 1262               		ldi r25,hi8(0x42200000)
 1263 0610 988B      		ldi r26,hlo8(0x42200000)
 1264 0612 8F87      		ldi r27,hhi8(0x42200000)
 1265               		std Y+11,r24
 1266               		std Y+12,r25
 1267               		std Y+13,r26
 1268               		std Y+14,r27
 1269               	.LBB68:
 1270               	.LBB69:
 1272               	.Ltext26:
 1274 0614 2D8D      	.LM88:
 1275 0616 3E8D      		ldi r18,lo8(0x437a0000)
 1276 0618 CE01      		ldi r19,hi8(0x437a0000)
 1277 061a 4F96      		ldi r20,hlo8(0x437a0000)
 1278 061c FC01      		ldi r21,hhi8(0x437a0000)
 1279 061e E20F      		ldd r22,Y+11
 1280 0620 F31F      		ldd r23,Y+12
 1281 0622 8081      		ldd r24,Y+13
 1282 0624 8823      		ldd r25,Y+14
 1283 0626 01F0      		rcall __mulsf3
 1284 0628 00C0      		movw r26,r24
 196:lcd_4.c       **** 
 197:lcd_4.c       ****                 _delay_ms(40);
 198:lcd_4.c       **** 
 199:lcd_4.c       **** 
 200:lcd_4.c       **** 
 201:lcd_4.c       **** 
 202:lcd_4.c       **** 
 203:lcd_4.c       **** 				  }
 204:lcd_4.c       **** 
 205:lcd_4.c       **** 				
 206:lcd_4.c       **** 
 207:lcd_4.c       **** 				lcdcommand(0xc0);
 1285               	3f800000)
 1286               		ldd r22,Y+7
 1287 062a 80EC      		ldd r23,Y+8
 1288 062c 00D0      		ldd r24,Y+9
 208:lcd_4.c       **** 
 209:lcd_4.c       **** 				i=0;
 1289               	,0,146,.LM89-.LFBB5
 1290               	.LM89:
 1291 062e 1E8E      		ldi r18,lo8(0x3f800000)
 1292 0630 1D8E      		ldi r19,hi8(0x3f800000)
 1293 0632 00C0      		ldi r20,hlo8(0x3f800000)
 1294               		ldi r21,hhi8(0x3f800000)
 210:lcd_4.c       **** 
 211:lcd_4.c       **** 				
 212:lcd_4.c       **** 
 213:lcd_4.c       **** 				while(str2[i] != '\0')
 214:lcd_4.c       **** 
 215:lcd_4.c       ****               {
 216:lcd_4.c       **** 
 217:lcd_4.c       **** 
 218:lcd_4.c       **** 
 219:lcd_4.c       ****                 lcddata(str2[i++]);
 1295               	,r25
 1296               		std Y+9,r26
 1297 0634 2D8D      		std Y+10,r27
 1299 0638 CE01      	.LM89:
 1300 063a 8C96      		ldi r18,lo8(0x3f800000)
 1301 063c FC01      		ldi r19,hi8(0x3f800000)
 1302 063e E20F      		ldi r20,hlo8(0x3f800000)
 1303 0640 F31F      		ldi r21,hhi8(0x3f800000)
 1304 0642 2081      		ldd r22,Y+7
 1305 0644 8D8D      		ldd r23,Y+8
 1306 0646 9E8D      		ldd r24,Y+9
 1307 0648 0196      		ldd r25,Y+10
 1308 064a 9E8F      		rcall __ltsf2
 1309 064c 8D8F      		tst r24
 1310 064e 822F      		brge .L87
 1311 0650 00D0      	.L83:
 1313 0654 90E0      	.LM90:
 1314 0656 A0E2      		ldi r24,lo8(1)
 1315 0658 B2E4      		ldi r25,hi8(1)
 1316 065a 8B87      		std Y+6,r25
 1317 065c 9C87      		std Y+5,r24
 1318 065e AD87      		rjmp .L73
 1319 0660 BE87      	.L87:
 1321               	.LM91:
 1322               		ldi r18,lo8(0x477fff00)
 1323               		ldi r19,hi8(0x477fff00)
 1324               		ldi r20,hlo8(0x477fff00)
 1325               		ldi r21,hhi8(0x477fff00)
 1326 0662 20E0      		ldd r22,Y+7
 1327 0664 30E0      		ldd r23,Y+8
 1328 0666 4AE7      		ldd r24,Y+9
 1329 0668 53E4      		ldd r25,Y+10
 1330 066a 6B85      		rcall __gtsf2
 1331 066c 7C85      		cp __zero_reg__,r24
 1332 066e 8D85      		brge .L88
 1333 0670 9E85      	.L84:
 1335 0674 DC01      	.LM92:
 1336 0676 CB01      		ldi r18,lo8(0x41200000)
 1337 0678 8F83      		ldi r19,hi8(0x41200000)
 1338 067a 9887      		ldi r20,hlo8(0x41200000)
 1339 067c A987      		ldi r21,hhi8(0x41200000)
 1340 067e BA87      		ldd r22,Y+11
 1341               		ldd r23,Y+12
 1342               		ldd r24,Y+13
 1343 0680 20E0      		ldd r25,Y+14
 1344 0682 30E0      		rcall __mulsf3
 1345 0684 40E8      		movw r26,r24
 1346 0686 5FE3      		movw r24,r22
 1347 0688 6F81      		movw r22,r24
 1348 068a 7885      		movw r24,r26
 1349 068c 8985      		rcall __fixunssfsi
 1350 068e 9A85      		movw r26,r24
 1351 0690 00D0      		movw r24,r22
 1352 0692 8823      		std Y+6,r25
 1353 0694 04F4      		std Y+5,r24
 1354               		rjmp .L76
 1355               	.L77:
 1356               		ldi r24,lo8(25)
 1357 0696 81E0      		ldi r25,hi8(25)
 1358 0698 90E0      		std Y+4,r25
 1359 069a 9E83      		std Y+3,r24
 1360 069c 8D83      	.LBB70:
 1361 069e 00C0      	.LBB71:
 1363               	.Ltext27:
 1365 06a0 20E0      	.LM93:
 1366 06a2 3FEF      		ldd r24,Y+3
 1367 06a4 4FE7      		ldd r25,Y+4
 1368 06a6 57E4      	/* #APP */
 1369 06a8 6F81      	 ;  105 "c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h" 1
 1370 06aa 7885      		1: sbiw r24,1
 1371 06ac 8985      		brne 1b
 1372 06ae 9A85      	 ;  0 "" 2
 1373 06b0 00D0      	/* #NOAPP */
 1374 06b2 1816      		std Y+4,r25
 1375 06b4 04F4      		std Y+3,r24
 1376               	.LBE71:
 1377               	.LBE70:
 1379 06b6 20E0      	.Ltext28:
 1381 06ba 40E2      	.LM94:
 1382 06bc 51E4      		ldd r24,Y+5
 1383 06be 6B85      		ldd r25,Y+6
 1384 06c0 7C85      		sbiw r24,1
 1385 06c2 8D85      		std Y+6,r25
 1386 06c4 9E85      		std Y+5,r24
 1387 06c6 00D0      	.L76:
 1389 06ca CB01      	.LM95:
 1390 06cc BC01      		ldd r24,Y+5
 1391 06ce CD01      		ldd r25,Y+6
 1392 06d0 00D0      		sbiw r24,0
 1393 06d2 DC01      		brne .L77
 1394 06d4 CB01      		rjmp .L70
 1395 06d6 9E83      	.L88:
 1397 06da 00C0      	.LM96:
 1398               		ldd r22,Y+7
 1399 06dc 89E1      		ldd r23,Y+8
 1400 06de 90E0      		ldd r24,Y+9
 1401 06e0 9C83      		ldd r25,Y+10
 1402 06e2 8B83      		rcall __fixunssfsi
 1403               		movw r26,r24
 1404               		movw r24,r22
 1405               		std Y+6,r25
 1406               		std Y+5,r24
 1407               	.L73:
 1408               		ldd r24,Y+5
 1409 06e4 8B81      		ldd r25,Y+6
 1410 06e6 9C81      		std Y+2,r25
 1411               		std Y+1,r24
 1412               	.LBB72:
 1413 06e8 0197      	.LBB73:
 1415               	.Ltext29:
 1417 06ec 9C83      	.LM97:
 1418 06ee 8B83      		ldd r24,Y+1
 1419               		ldd r25,Y+2
 1420               	/* #APP */
 1421               	 ;  105 "c:/winavr/lib/gcc/../../avr/include/util/delay_basic.h" 1
 1422               		1: sbiw r24,1
 1423               		brne 1b
 1424               	 ;  0 "" 2
 1425 06f0 8D81      	/* #NOAPP */
 1426 06f2 9E81      		std Y+2,r25
 1427 06f4 0197      		std Y+1,r24
 1428 06f6 9E83      	.L70:
 1429 06f8 8D83      	.LBE73:
 1430               	.LBE72:
 1431               	.LBE69:
 1432               	.LBE68:
 1434 06fc 9E81      	.Ltext30:
 1436 0700 01F4      	.LM98:
 1437 0702 00C0      		ldd r18,Y+29
 1438               		ldd r19,Y+30
 1439               		movw r24,r28
 1440               		adiw r24,44
 1441 0704 6F81      		movw r30,r24
 1442 0706 7885      		add r30,r18
 1443 0708 8985      		adc r31,r19
 1444 070a 9A85      		ld r24,Z
 1445 070c 00D0      		tst r24
 1446 070e DC01      		breq .+2
 1447 0710 CB01      		rjmp .L79
 1449 0714 8D83      	.LM99:
 1450               		ldi r24,lo8(0)
 1451 0716 8D81      		ldi r25,hi8(0)
 1452 0718 9E81      	/* epilogue start */
 1454 071c 8983      	.LM100:
 1455               		adiw r28,61
 1456               		in __tmp_reg__,__SREG__
 1457               		cli
 1458               		out __SP_H__,r29
 1459               		out __SREG__,__tmp_reg__
 1460               		out __SP_L__,r28
 1461 071e 8981      		pop r28
 1462 0720 9A81      		pop r29
 1463               		ret
 1470 0728 8983      	.Lscope5:
 1471               		.comm My_global,2,1
 1474               	.Letext0:
 1475               	...
 220:lcd_4.c       **** 
 221:lcd_4.c       ****                 _delay_ms(40);
 222:lcd_4.c       **** 
 223:lcd_4.c       **** 
 224:lcd_4.c       **** 
 225:lcd_4.c       **** 				  }
 226:lcd_4.c       **** 
 227:lcd_4.c       **** 				  break;
 228:lcd_4.c       **** 
 229:lcd_4.c       **** 				
 230:lcd_4.c       **** 
 231:lcd_4.c       **** 				
 232:lcd_4.c       **** 
 233:lcd_4.c       **** 				 // system behaviour
 234:lcd_4.c       **** 
 235:lcd_4.c       ****    }
 236:lcd_4.c       **** 
 237:lcd_4.c       ****    		return 0;
 238:lcd_4.c       **** 
 239:lcd_4.c       **** 
 240:lcd_4.c       **** 
 241:lcd_4.c       **** }
DEFINED SYMBOLS
                            *ABS*:00000000 lcd_4.c
C:\users\batch2\Temp/ccJdaVmi.s:2      *ABS*:0000003f __SREG__
C:\users\batch2\Temp/ccJdaVmi.s:3      *ABS*:0000003e __SP_H__
C:\users\batch2\Temp/ccJdaVmi.s:4      *ABS*:0000003d __SP_L__
C:\users\batch2\Temp/ccJdaVmi.s:5      *ABS*:00000034 __CCP__
C:\users\batch2\Temp/ccJdaVmi.s:6      *ABS*:00000000 __tmp_reg__
C:\users\batch2\Temp/ccJdaVmi.s:7      *ABS*:00000001 __zero_reg__
C:\users\batch2\Temp/ccJdaVmi.s:73     .text:00000000 __vector_1
C:\users\batch2\Temp/ccJdaVmi.s:104    .text:00000020 lcdcommand
C:\users\batch2\Temp/ccJdaVmi.s:518    .text:00000236 lcddata
C:\users\batch2\Temp/ccJdaVmi.s:931    .text:0000044c lcd_init
C:\users\batch2\Temp/ccJdaVmi.s:982    .text:00000472 main
                            *COM*:00000002 My_global

UNDEFINED SYMBOLS
__do_copy_data
__do_clear_bss
__mulsf3
__ltsf2
__gtsf2
__fixunssfsi
